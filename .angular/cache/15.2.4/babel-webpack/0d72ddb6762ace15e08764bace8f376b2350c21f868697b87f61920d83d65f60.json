{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction SignupComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please provide a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please provide a valid username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SignupComponent_span_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please provide a valid Password \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let SignupComponent = /*#__PURE__*/(() => {\n  class SignupComponent {\n    constructor(authService, router, toastr) {\n      this.authService = authService;\n      this.router = router;\n      this.toastr = toastr;\n      this.signupRequestPayload = {\n        username: '',\n        email: '',\n        password: ''\n      };\n    }\n    ngOnInit() {\n      this.signupForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        email: new FormControl('', [Validators.required, Validators.email]),\n        password: new FormControl('', Validators.required)\n      });\n    }\n    signup() {\n      this.signupRequestPayload.email = this.signupForm.get('email').value;\n      this.signupRequestPayload.username = this.signupForm.get('username').value;\n      this.signupRequestPayload.password = this.signupForm.get('password').value;\n      this.authService.signup(this.signupRequestPayload).subscribe(data => {\n        this.router.navigate(['/login'], {\n          queryParams: {\n            registered: 'true'\n          }\n        });\n      }, error => {\n        console.log(error);\n        this.toastr.error('Registration Failed! Please try again');\n      });\n    }\n  }\n  SignupComponent.ɵfac = function SignupComponent_Factory(t) {\n    return new (t || SignupComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  SignupComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SignupComponent,\n    selectors: [[\"app-signup\"]],\n    decls: 36,\n    vars: 7,\n    consts: [[1, \"register-section\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-3\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", 2, \"text-align\", \"center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"email_address\", 1, \"col-md-4\", \"col-form-label\", \"text-md-right\"], [\"type\", \"text\", \"id\", \"email_address\", \"name\", \"email-address\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", 3, \"formControlName\"], [4, \"ngIf\"], [1, \"col-md-4\", \"col-form-label\", \"text-md-right\"], [\"type\", \"text\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", 3, \"formControlName\"], [\"for\", \"password\", 1, \"col-md-4\", \"col-form-label\", \"text-md-right\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"formControlName\"], [1, \"col-md-6\", \"offset-md-4\"], [\"type\", \"submit\", 1, \"sign-up\"], [2, \"padding-left\", \"15px\"], [\"routerLink\", \"/login\"]],\n    template: function SignupComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\");\n        i0.ɵɵtext(7, \"Register\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function SignupComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.signup();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"E-Mail Address\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, SignupComponent_span_15_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"User Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelement(20, \"input\", 13);\n        i0.ɵɵtemplate(21, SignupComponent_span_21_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 8)(23, \"label\", 14);\n        i0.ɵɵtext(24, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelement(26, \"input\", 15);\n        i0.ɵɵtemplate(27, SignupComponent_span_27_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(28, \"span\", 16)(29, \"button\", 17);\n        i0.ɵɵtext(30, \" Sign Up \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"span\", 18);\n        i0.ɵɵtext(32, \"Existing user? \");\n        i0.ɵɵelementStart(33, \"a\", 19);\n        i0.ɵɵtext(34, \"Log In\");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelement(35, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.signupForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"email\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.signupForm.get(\"email\").valid && ctx.signupForm.get(\"email\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"username\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.signupForm.get(\"username\").valid && ctx.signupForm.get(\"username\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"password\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.signupForm.get(\"password\").valid && ctx.signupForm.get(\"password\").touched);\n      }\n    },\n    dependencies: [i4.NgIf, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\".register-section[_ngcontent-%COMP%]{margin:100px}\"]\n  });\n  return SignupComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}