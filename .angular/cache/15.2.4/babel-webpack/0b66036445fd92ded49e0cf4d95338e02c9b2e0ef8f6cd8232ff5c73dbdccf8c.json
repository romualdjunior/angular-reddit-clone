{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction LoginComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Please provide a valid username \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Password cannot be empty \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"p\", 21);\n    i0.ɵɵtext(2, \"Login Failed. Please check your credentials and try again.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"background-color\": \"green\"\n  };\n};\nfunction LoginComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"p\", 23);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction0(2, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.registerSuccessMessage);\n  }\n}\nexport let LoginComponent = /*#__PURE__*/(() => {\n  class LoginComponent {\n    constructor(authService, activatedRoute, router, toastr) {\n      this.authService = authService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.toastr = toastr;\n      this.loginRequestPayload = {\n        username: '',\n        password: ''\n      };\n    }\n    ngOnInit() {\n      this.loginForm = new FormGroup({\n        username: new FormControl('', Validators.required),\n        password: new FormControl('', Validators.required)\n      });\n      this.activatedRoute.queryParams.subscribe(params => {\n        if (params.registered !== undefined && params.registered === 'true') {\n          this.toastr.success('Signup Successful');\n          this.registerSuccessMessage = 'Please Check your inbox for activation email ' + 'activate your account before you Login!';\n        }\n      });\n    }\n    login() {\n      this.loginRequestPayload.username = this.loginForm.get('username').value;\n      this.loginRequestPayload.password = this.loginForm.get('password').value;\n      this.authService.login(this.loginRequestPayload).subscribe(data => {\n        this.isError = false;\n        this.router.navigateByUrl('');\n        this.toastr.success('Login Successful');\n      }, error => {\n        this.isError = true;\n        throwError(error);\n      });\n    }\n  }\n  LoginComponent.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  LoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 32,\n    vars: 7,\n    consts: [[1, \"login-section\"], [1, \"row\", \"justify-content-center\"], [1, \"col-md-3\"], [1, \"col-md-6\"], [1, \"card\"], [1, \"card-header\", 2, \"text-align\", \"center\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\", \"row\"], [\"for\", \"user_name\", 1, \"col-md-4\", \"col-form-label\", \"text-md-right\"], [\"type\", \"text\", \"id\", \"user_name\", \"name\", \"user_name\", \"required\", \"\", \"autofocus\", \"\", 1, \"form-control\", 3, \"formControlName\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"col-md-4\", \"col-form-label\", \"text-md-right\"], [\"type\", \"password\", \"id\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"formControlName\"], [1, \"col-md-6\", \"offset-md-4\"], [\"type\", \"submit\", 1, \"login\"], [2, \"padding-left\", \"15px\"], [\"routerLink\", \"/signup\"], [\"class\", \"login-failed\", 4, \"ngIf\"], [\"class\", \"login-failed\", 3, \"ngStyle\", 4, \"ngIf\"], [1, \"login-failed\"], [1, \"login-failed-text\"], [1, \"login-failed\", 3, \"ngStyle\"], [1, \"register-success-text\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h4\");\n        i0.ɵɵtext(7, \"Login\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.login();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8)(11, \"label\", 9);\n        i0.ɵɵtext(12, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelement(14, \"input\", 10);\n        i0.ɵɵtemplate(15, LoginComponent_span_15_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"div\", 8)(17, \"label\", 12);\n        i0.ɵɵtext(18, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3);\n        i0.ɵɵelement(20, \"input\", 13);\n        i0.ɵɵtemplate(21, LoginComponent_span_21_Template, 2, 0, \"span\", 11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"span\", 14)(23, \"button\", 15);\n        i0.ɵɵtext(24, \" Login \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"span\", 16);\n        i0.ɵɵtext(26, \"New User? \");\n        i0.ɵɵelementStart(27, \"a\", 17);\n        i0.ɵɵtext(28, \"SIGN UP\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(29, LoginComponent_div_29_Template, 3, 0, \"div\", 18);\n        i0.ɵɵtemplate(30, LoginComponent_div_30_Template, 3, 3, \"div\", 19);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelement(31, \"div\", 2);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"username\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.get(\"username\").valid && ctx.loginForm.get(\"username\").touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"password\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.loginForm.get(\"password\").valid && ctx.loginForm.get(\"password\").touched);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.isError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.registerSuccessMessage.length > 0);\n      }\n    },\n    dependencies: [i4.NgIf, i4.NgStyle, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName],\n    styles: [\".login-section[_ngcontent-%COMP%]{margin:100px}.login-failed[_ngcontent-%COMP%], .register-success[_ngcontent-%COMP%]{text-align:center;margin:10px auto auto;border:2px solid black;width:65%;background-color:red}.login-failed-text[_ngcontent-%COMP%], .register-success-text[_ngcontent-%COMP%]{text-align:center;margin-top:5px;font-weight:700;color:#f0f8ff}\"]\n  });\n  return LoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}