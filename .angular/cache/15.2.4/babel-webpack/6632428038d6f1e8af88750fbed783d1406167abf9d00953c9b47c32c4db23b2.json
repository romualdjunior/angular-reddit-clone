{"ast":null,"code":"import { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/shared/post.service\";\nimport * as i3 from \"src/app/subreddit/subreddit.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@tinymce/tinymce-angular\";\nfunction CreatePostComponent_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subreddit_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(subreddit_r1.name);\n  }\n}\nconst _c0 = \"advlist autolink lists link image charmap print preview anchor\";\nconst _c1 = \"insertdatetime media table paste code help wordcount\";\nconst _c2 = function () {\n  return [_c0, \"searchreplace visualblocks code fullscreen\", _c1];\n};\nconst _c3 = \"undo redo | formatselect | bold italic backcolor | \\n                          alignleft aligncenter alignright alignjustify | \\n                          bullist numlist outdent indent | removeformat | help\";\nconst _c4 = function (a2) {\n  return {\n    height: 500,\n    menubar: false,\n    plugins: a2,\n    toolbar: _c3\n  };\n};\nexport let CreatePostComponent = /*#__PURE__*/(() => {\n  class CreatePostComponent {\n    constructor(router, postService, subredditService) {\n      this.router = router;\n      this.postService = postService;\n      this.subredditService = subredditService;\n      this.postPayload = {\n        postName: '',\n        url: '',\n        description: '',\n        subredditName: ''\n      };\n    }\n    ngOnInit() {\n      this.createPostForm = new FormGroup({\n        postName: new FormControl('', Validators.required),\n        subredditName: new FormControl('', Validators.required),\n        url: new FormControl('', Validators.required),\n        description: new FormControl('', Validators.required)\n      });\n      this.subredditService.getAllSubreddits().subscribe(data => {\n        this.subreddits = data;\n      }, error => {\n        throwError(error);\n      });\n    }\n    createPost() {\n      this.postPayload.postName = this.createPostForm.get('postName').value;\n      this.postPayload.subredditName = this.createPostForm.get('subredditName').value;\n      this.postPayload.url = this.createPostForm.get('url').value;\n      this.postPayload.description = this.createPostForm.get('description').value;\n      this.postService.createPost(this.postPayload).subscribe(data => {\n        this.router.navigateByUrl('/');\n      }, error => {\n        throwError(error);\n      });\n    }\n    discardPost() {\n      this.router.navigateByUrl('/');\n    }\n  }\n  CreatePostComponent.ɵfac = function CreatePostComponent_Factory(t) {\n    return new (t || CreatePostComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.PostService), i0.ɵɵdirectiveInject(i3.SubredditService));\n  };\n  CreatePostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreatePostComponent,\n    selectors: [[\"app-create-post\"]],\n    decls: 22,\n    vars: 10,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"create-post-container\", \"col-md-9\"], [1, \"post-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [1, \"create-post-heading\"], [\"type\", \"text\", \"placeholder\", \"Title\", 1, \"form-control\", 2, \"margin-top\", \"5px\", 3, \"formControlName\"], [\"type\", \"text\", \"placeholder\", \"URL\", 1, \"form-control\", 2, \"margin-top\", \"5px\", 3, \"formControlName\"], [1, \"form-control\", 2, \"margin-top\", \"10px\", 3, \"formControlName\"], [\"value\", \"\", \"selected\", \"\", \"disabled\", \"\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formControlName\", \"init\"], [1, \"float-right\", 2, \"margin-top\", \"5px\"], [1, \"btnDiscard\", 3, \"click\"], [1, \"btnCreatePost\"]],\n    template: function CreatePostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\", 3);\n        i0.ɵɵlistener(\"ngSubmit\", function CreatePostComponent_Template_form_ngSubmit_4_listener() {\n          return ctx.createPost();\n        });\n        i0.ɵɵelementStart(5, \"div\", 4)(6, \"div\", 5);\n        i0.ɵɵtext(7, \"Create Post\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"hr\")(9, \"input\", 6)(10, \"input\", 7);\n        i0.ɵɵelementStart(11, \"select\", 8)(12, \"option\", 9);\n        i0.ɵɵtext(13, \"Select Subreddit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, CreatePostComponent_option_14_Template, 2, 1, \"option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"editor\", 11);\n        i0.ɵɵelementStart(16, \"span\")(17, \"div\", 12)(18, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function CreatePostComponent_Template_button_click_18_listener() {\n          return ctx.discardPost();\n        });\n        i0.ɵɵtext(19, \"Discard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"button\", 14);\n        i0.ɵɵtext(21, \"Post\");\n        i0.ɵɵelementEnd()()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.createPostForm);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControlName\", \"postName\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControlName\", \"url\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControlName\", \"subredditName\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.subreddits);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControlName\", \"description\")(\"init\", i0.ɵɵpureFunction1(8, _c4, i0.ɵɵpureFunction0(7, _c2)));\n      }\n    },\n    dependencies: [i4.NgForOf, i5.ɵNgNoValidate, i5.NgSelectOption, i5.ɵNgSelectMultipleOption, i5.DefaultValueAccessor, i5.SelectControlValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.EditorComponent],\n    styles: [\".btnCreatePost[_ngcontent-%COMP%], .btnCreateSubreddit[_ngcontent-%COMP%]{margin-top:5px}.post-form[_ngcontent-%COMP%]{margin:2px}.comment-notification[_ngcontent-%COMP%]{margin-top:5px}.create-post-container[_ngcontent-%COMP%]{--post-line-color: #ccc;border:1px solid #ccc;margin-top:10px;margin-bottom:10px;overflow:hidden;background-color:#fffc;color:#878a8c;position:relative;border-radius:4px;padding:5px}.btnDiscard[_ngcontent-%COMP%]{fill:#0079d3;border:1px solid;border-radius:4px;text-align:center;letter-spacing:1px;text-decoration:none;font-size:12px;font-weight:700;letter-spacing:.5px;line-height:24px;text-transform:uppercase;padding:3px 16px;opacity:1;width:288px;height:34px;margin-top:5px;color:#0079d3;background-color:transparent}.create-post-heading[_ngcontent-%COMP%]{font-size:18px;font-weight:500;line-height:22px;color:#1c1c1c;flex:1}.btnCreatePost[_ngcontent-%COMP%]{background-color:#0079d3;border-color:#0079d3;color:#f0f8ff;fill:#0079d3;border:1px solid;border-radius:4px;text-align:center;letter-spacing:1px;text-decoration:none;font-size:12px;font-weight:700;letter-spacing:.5px;line-height:24px;text-transform:uppercase;padding:3px 16px;opacity:1;width:288px;height:34px}\"]\n  });\n  return CreatePostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}