{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/shared/post.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/comment/comment.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../../shared/vote-button/vote-button.component\";\nimport * as i7 from \"../../shared/side-bar/side-bar.component\";\nimport * as i8 from \"../../shared/subreddit-side-bar/subreddit-side-bar.component\";\nfunction ViewPostComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"div\", 20)(2, \"div\", 21)(3, \"a\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\")(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"b\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(10, \"hr\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(comment_r1.userName);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r1.duration);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(comment_r1.text);\n  }\n}\nexport let ViewPostComponent = /*#__PURE__*/(() => {\n  class ViewPostComponent {\n    constructor(postService, activateRoute, commentService, router) {\n      this.postService = postService;\n      this.activateRoute = activateRoute;\n      this.commentService = commentService;\n      this.router = router;\n      this.postId = this.activateRoute.snapshot.params.id;\n      this.commentForm = new FormGroup({\n        text: new FormControl('', Validators.required)\n      });\n      this.commentPayload = {\n        text: '',\n        postId: this.postId\n      };\n    }\n    ngOnInit() {\n      this.getPostById();\n      this.getCommentsForPost();\n    }\n    postComment() {\n      this.commentPayload.text = this.commentForm.get('text').value;\n      this.commentService.postComment(this.commentPayload).subscribe(data => {\n        this.commentForm.get('text').setValue('');\n        this.getCommentsForPost();\n      }, error => {\n        throwError(error);\n      });\n    }\n    getPostById() {\n      this.postService.getPost(this.postId).subscribe(data => {\n        this.post = data;\n      }, error => {\n        throwError(error);\n      });\n    }\n    getCommentsForPost() {\n      this.commentService.getAllCommentsForPost(this.postId).subscribe(data => {\n        this.comments = data;\n      }, error => {\n        throwError(error);\n      });\n    }\n  }\n  ViewPostComponent.ɵfac = function ViewPostComponent_Factory(t) {\n    return new (t || ViewPostComponent)(i0.ɵɵdirectiveInject(i1.PostService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.CommentService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  ViewPostComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewPostComponent,\n    selectors: [[\"app-view-post\"]],\n    decls: 34,\n    vars: 9,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-md-9\"], [1, \"row\", \"post\"], [1, \"col-md-1\"], [3, \"post\"], [1, \"col-md-11\"], [1, \"subreddit-text\"], [\"href\", \"\", 1, \"post-url\"], [\"href\", \"\", 1, \"username\"], [\"routerLink\", \"post.url\", 1, \"post-title\"], [1, \"post-text\", 3, \"innerHtml\"], [1, \"post-comment\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"placeholder\", \"Your Thoughts?\", 1, \"form-control\", 3, \"formControlName\"], [\"type\", \"submit\", 1, \"login\", \"float-right\"], [\"style\", \"margin-top: 60px;\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-md-3\"], [2, \"margin-top\", \"60px\"], [1, \"comment\"], [1, \"username\"], [\"routerLink\", \"/user/comment.username\"]],\n    template: function ViewPostComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"hr\");\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"div\", 4);\n        i0.ɵɵelement(6, \"app-vote-button\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6)(8, \"span\")(9, \"span\", 7)(10, \"a\", 8);\n        i0.ɵɵtext(11);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"span\");\n        i0.ɵɵtext(13, \" . Posted \");\n        i0.ɵɵelementStart(14, \"span\");\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(16, \" by \");\n        i0.ɵɵelementStart(17, \"a\", 9);\n        i0.ɵɵtext(18);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(19, \"hr\");\n        i0.ɵɵelementStart(20, \"a\", 10);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"div\");\n        i0.ɵɵelement(23, \"p\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 12)(25, \"form\", 13);\n        i0.ɵɵlistener(\"ngSubmit\", function ViewPostComponent_Template_form_ngSubmit_25_listener() {\n          return ctx.postComment();\n        });\n        i0.ɵɵelementStart(26, \"div\", 14);\n        i0.ɵɵelement(27, \"textarea\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"button\", 16);\n        i0.ɵɵtext(29, \"Comment\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(30, ViewPostComponent_div_30_Template, 11, 3, \"div\", 17);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(31, \"div\", 18);\n        i0.ɵɵelement(32, \"app-side-bar\")(33, \"app-subreddit-side-bar\");\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"post\", ctx.post);\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate(ctx.post.subredditName);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.post.duration, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.post.userName);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.post.postName);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"innerHtml\", ctx.post.description, i0.ɵɵsanitizeHtml);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.commentForm);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControlName\", \"text\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n      }\n    },\n    dependencies: [i4.NgForOf, i2.RouterLinkWithHref, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.FormGroupDirective, i5.FormControlName, i6.VoteButtonComponent, i7.SideBarComponent, i8.SubredditSideBarComponent],\n    styles: [\".post-title[_ngcontent-%COMP%]{font-size:28px;font-weight:700;opacity:1}.post-title[_ngcontent-%COMP%]:hover{opacity:.6}.subreddit-text[_ngcontent-%COMP%]{font-weight:700}.post-url[_ngcontent-%COMP%]{color:#000}.username[_ngcontent-%COMP%]{color:gray}.post-text[_ngcontent-%COMP%]{margin-top:10px}.post[_ngcontent-%COMP%]{--post-line-color: #ccc;border:1px solid #ccc;margin-top:10px;margin-bottom:10px;overflow:hidden;background-color:#fffc;color:#878a8c;position:relative;border-radius:4px;padding:5px}.comment[_ngcontent-%COMP%]{--post-line-color: #ccc;border:1px solid #ccc;margin-bottom:10px;overflow:hidden;background-color:#fffc;color:#878a8c;position:relative;border-radius:4px;padding:5px}\"]\n  });\n  return ViewPostComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}